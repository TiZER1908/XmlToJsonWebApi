@page "/edit/{id}"
@rendermode InteractiveServer
@inject NavigationManager Navigation

@using XmlToJsonWebApi.Share.DTOs
@using XmlToJsonWebApi.Ui.Helpers

<PageTitle>Edit</PageTitle>

<h3>Изменение справочника №@Id</h3>
<div class="form-group">
    <label for="begindateInput">Начало</label>
    <input type="date" id="begindateInput" class="form-control" @bind="newDict.BeginDate" />
</div>

<div class="form-group">
    <label for="enddateInput">Окончание</label>
    <input type="date" id="enddateInput" class="form-control" @bind="newDict.EndDate" />
</div>

<div class="form-group">
    <label for="codeInput">Код</label>
    <input type="text" id="codeInput" class="form-control" @bind="newDict.Code" />
</div>

<div class="form-group">
    <label for="nameInput">Наименование</label>
    <input type="text" id="nameInput" class="form-control" @bind="newDict.Name" />
</div>

<div class="form-group">
    <label for="commentInput">Комментарий</label>
    <input type="text" id="commentInput" class="form-control" @bind="newDict.Comments" />
</div>

<button type="button" class="btn btn-danger btn-sm" @onclick="() => EditDict()">Изменить</button>

@code {
    [CascadingParameter] private HttpClient HttpClient { get; set; } = new();
    [Parameter]
    public string? Id { get; set; }

    private List<DictionaryDTO> dicts;
    private DictionaryDTO newDict = new DictionaryDTO();
    private string radiodict = string.Empty;


    protected override async Task OnInitializedAsync()
    {
        try
        {
            var uri = ApiHelper.BaseApiUrl + "/api/v1/XmlToJson/GetById";
            var response = await HttpClient.GetAsync($"{uri}/{Id}");
            if (response.IsSuccessStatusCode)
            {
                newDict = response.Content.ReadFromJsonAsync<DictionaryDTO>().Result;
            }
        }
        catch (Exception ex)
        {
        }
    }

    private async Task EditDict()
    {
        try
        {
            var uri = ApiHelper.BaseApiUrl + "/api/v1/XmlToJson/Put";
            var response = await HttpClient.PutAsJsonAsync($"{uri}/{Id}", newDict);
            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/");
            }
        }
        catch (Exception ex)
        {
        }
    }
}
